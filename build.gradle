plugins {
	id 'java-library'
}

group = 'etri'
version = '25.07.01'

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}
[compileJava,compileTestJava]*.options*.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:deprecation"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	slf4j_version = '2.0.17'
	logback_version = '1.5.18'
	guava_version = '33.4.8-jre'
	checker_version = '3.49.4'
	rxjava3_version = '3.1.8'
	picocli_version = '4.6.2'
	jackson_version = '2.18.2'
	lombok_version = '1.18.32'
	
	cglib_version = '3.3.0'
	commons_io_version = '2.11.0'
	commons_text_version = '1.12.0'
	okhttp_version = '4.12.0'
	
	jakarta_persistence_version = '3.1.0'
	
	junit_version = '4.13.2'
	mockito_version = '3.12.4'
	hamcrest_version = '1.3'
	
	commons_beanutils_version = '1.9.4'
	commons_logging_version = '1.3.5'
}

repositories {
    mavenCentral()
}

dependencies {
	// Logback
	api "org.slf4j:slf4j-api:${slf4j_version}"
	implementation "ch.qos.logback:logback-classic:${logback_version}"
	
	api "com.google.guava:guava:${guava_version}"
	api "org.checkerframework:checker:${checker_version}"
	api "io.reactivex.rxjava3:rxjava:${rxjava3_version}"

	// Lombok (from the project :utils)
	compileOnly "org.projectlombok:lombok:${lombok_version}"
	annotationProcessor "org.projectlombok:lombok:${lombok_version}"
	
	// command line parser
	implementation "info.picocli:picocli:${picocli_version}"

	// jackson json parser
	implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson_version}"
	
	implementation "commons-io:commons-io:${commons_io_version}"
	implementation "org.apache.commons:commons-text:${commons_text_version}"
	implementation "cglib:cglib:${cglib_version}"
	
	// Apache Commons BeanUtils
	implementation ("commons-beanutils:commons-beanutils:${commons_beanutils_version}") {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
	
	// HTTP Client
	implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"
	
	// jakarta api
	implementation "jakarta.persistence:jakarta.persistence-api:${jakarta_persistence_version}"
	
	testImplementation "junit:junit:${junit_version}"
	testImplementation "org.mockito:mockito-core:${mockito_version}"
}

tasks.named('test') {
	useJUnitPlatform()
}